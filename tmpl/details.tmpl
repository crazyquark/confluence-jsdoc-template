<?js
var data = obj;
var self = this;

// Check if the default value is an object, if so, apply code highlighting
if (data.defaultvalue && data.defaultvaluetype === 'object') {
    data.defaultvalue = "{code}" + data.defaultvalue + "{code}";
}
?><?js
        var properties = data.properties;
        if (properties && properties.length && properties.forEach) {
    ?>h5. Properties:
<?js= this.partial('properties.tmpl', properties) ?>
<?js } ?>
<?js if ((data.inherited && data.inherits) || (data.defaultvalue) || (data.deprecated) || (data.author && author.length) || (data.copyright)) { ?>h5. Details<?js } ?>
<?js } ?><?js if (data.inherited && data.inherits) { ?>Inherited From: <?js= this.linkto(data.inherits, this.htmlsafe(data.inherits)) ?>
<?js } ?><?js if (data.defaultvalue) {?>Default Value: <?js= data.defaultvalue ?>
<?js if (data.version) {?>Version <?js= version ?>
<?js } ?><?js if (data.deprecated) { ?>{note}Deprecated: <?js if (data.deprecated === true) { ?>Yes<?js } else { ?><?js= data.deprecated ?><?js } ?>{note}
<?js } ?><?js if (data.author && author.length) {?>Authors: <?js author.forEach(function(a, i) { ?><?js= self.resolveAuthorLinks(a) ?><?js if (i+1 < author.length) {?>, <?js } }); ?>
<?js } ?><?js if (data.copyright) {?>Copyright: <?js= copyright ?> <?js } ?><?js if (data.license) {?>License: <?js= license ?>
<?js } ?><?js if (data.meta) {?>Source: <?js= self.linkto(meta.filename) ?>, <?js= self.linkto(meta.filename, 'line ' + meta.lineno, null, 'line' + meta.lineno) ?><?js } ?><?js if (data.since) {?> Since: <?js= since ?>
<?js } ?>
